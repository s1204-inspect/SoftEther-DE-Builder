name: Build

on:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: SoftEtherVPN/SoftEtherVPN
          submodules: true

      - name: Install dependencies
        run: |
          cat <<EOL | sudo tee /etc/apt/sources.list
          deb [arch=amd64,arm64] http://archive.ubuntu.com/ubuntu/ jammy main restricted universe multiverse
          deb [arch=amd64,arm64] http://archive.ubuntu.com/ubuntu/ jammy-updates main restricted universe multiverse
          deb [arch=amd64,arm64] http://archive.ubuntu.com/ubuntu/ jammy-backports main restricted universe multiverse
          deb [arch=amd64,arm64] http://security.ubuntu.com/ubuntu/ jammy-security main restricted universe multiverse
          EOL
          sudo dpkg --add-architecture arm64
          sudo apt-get update
          sudo apt-get -y install cmake gcc g++ ninja-build libncurses5-dev libreadline-dev libsodium-dev libssl-dev make zlib1g-dev liblz4-dev libnl-genl-3-dev qemu-user-static gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libncurses5-dev:arm64 libncursesw5-dev:arm64

      - name: Build amd64
        run: |
          echo "commit=$(git show --format='%h' --no-patch)" >> $GITHUB_ENV
          mkdir build-amd64
          cd build-amd64
          cmake -G "Ninja" -DCMAKE_BUILD_TYPE=RelWithDebInfo ..
          cmake --build .
          cpack -C Release -G DEB
          sudo chown -R runner:runner .

      - name: Build arm64
        run: |
          mkdir build-arm64
          cd build-arm64
          cat <<EOL | tee toolchain-arm64.cmake
          set(CMAKE_SYSTEM_NAME Linux)
          set(CMAKE_SYSTEM_PROCESSOR aarch64)
          set(CMAKE_C_COMPILER /usr/bin/aarch64-linux-gnu-gcc)
          set(CMAKE_CXX_COMPILER /usr/bin/aarch64-linux-gnu-g++)
          set(CMAKE_FIND_ROOT_PATH /usr/aarch64-linux-gnu /usr/lib/aarch64-linux-gnu)
          set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
          set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
          set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
          EOL
          cmake -G "Ninja" -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_TOOLCHAIN_FILE=toolchain-arm64.cmake ..
          cmake --build .
          cpack -C Release -G DEB
          sudo chown -R runner:runner .

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: SoftEtherVPN@${{ env.commit }}
          path: |
            build-amd64/*.deb
            build-arm64/*.deb
